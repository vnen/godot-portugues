h1(#basebutton). BaseButton

h4(#inherits-control). *Inherits:* "Control":class_control

h4(#category-core). *Category:* Core

h3(#brief-description). Brief Description

Provides a base class for different kinds of buttons.

h3(#member-functions). Member Functions

* void *"&#95;pressed":#_pressed* *(* *)* virtual
* void *"&#95;toggled":#_toggled* *(* "bool":class_bool pressed *)* virtual
* void *"set&#95;pressed":#set_pressed* *(* "bool":class_bool pressed *)*
* "bool":class_bool *"is&#95;pressed":#is_pressed* *(* *)* const
* "bool":class_bool *"is&#95;hovered":#is_hovered* *(* *)* const
* void *"set&#95;toggle&#95;mode":#set_toggle_mode* *(* "bool":class_bool enabled *)*
* "bool":class_bool *"is&#95;toggle&#95;mode":#is_toggle_mode* *(* *)* const
* void *"set&#95;disabled":#set_disabled* *(* "bool":class_bool disabled *)*
* "bool":class_bool *"is&#95;disabled":#is_disabled* *(* *)* const
* void *"set&#95;click&#95;on&#95;press":#set_click_on_press* *(* "bool":class_bool enable *)*
* "bool":class_bool *"get&#95;click&#95;on&#95;press":#get_click_on_press* *(* *)* const
* "int":class_int *"get&#95;draw&#95;mode":#get_draw_mode* *(* *)* const

h3(#signals). Signals

* *released* *(* *)*
* *toggled* *(* "bool":class_bool pressed *)*
* *pressed* *(* *)*

h3(#numeric-constants). Numeric Constants

* *DRAW&#95;NORMAL* = *0*
* *DRAW&#95;PRESSED* = *1*
* *DRAW&#95;HOVER* = *2*
* *DRAW&#95;DISABLED* = *3*

h3(#description). Description

BaseButton is the abstract base class for buttons, so it shouldn't be used directly (It doesnt display anything). Other types of buttons inherit from it.

h3(#member-function-description). Member Function Description

h4(#set_pressed). <a name="set_pressed">set&#95;pressed</a>

* void *set&#95;pressed* *(* "bool":class_bool pressed *)*

Set the button to pressed state (only if toggle&#95;mode is active).

h4(#is_pressed). <a name="is_pressed">is&#95;pressed</a>

* "bool":class_bool *is&#95;pressed* *(* *)* const

Return when the button is pressed (only if toggle&#95;mode is active).

h4(#set_toggle_mode). <a name="set_toggle_mode">set&#95;toggle&#95;mode</a>

* void *set&#95;toggle&#95;mode* *(* "bool":class_bool enabled *)*

Set the button toggle&#95;mode property. Toggle mode makes the button flip state between pressed and unpressed each time its area is clicked.

h4(#is_toggle_mode). <a name="is_toggle_mode">is&#95;toggle&#95;mode</a>

* "bool":class_bool *is&#95;toggle&#95;mode* *(* *)* const

Return the toggle&#95;mode property (see "set&#95;toggle&#95;mode":#set_toggle_mode).

h4(#set_disabled). <a name="set_disabled">set&#95;disabled</a>

* void *set&#95;disabled* *(* "bool":class_bool disabled *)*

Set the button into disabled state. When a button is disabled, it can&quot;apos;t be clicked or toggled.

h4(#is_disabled). <a name="is_disabled">is&#95;disabled</a>

* "bool":class_bool *is&#95;disabled* *(* *)* const

Return wether the button is in disabled state (see "set&#95;disabled":#set_disabled).

h4(#set_click_on_press). <a name="set_click_on_press">set&#95;click&#95;on&#95;press</a>

* void *set&#95;click&#95;on&#95;press* *(* "bool":class_bool enable *)*

Set the button click&#95;on&#95;press mode. This mode generates click events when a mousebutton or key is just pressed (by default events are generated when the button/keys are released and both press and release occur in the visual area of the Button).

h4(#get_click_on_press). <a name="get_click_on_press">get&#95;click&#95;on&#95;press</a>

* "bool":class_bool *get&#95;click&#95;on&#95;press* *(* *)* const

Return the state of the click&#95;on&#95;press property (see "set&#95;click&#95;on&#95;press":#set_click_on_press).

h4(#get_draw_mode). <a name="get_draw_mode">get&#95;draw&#95;mode</a>

* "int":class_int *get&#95;draw&#95;mode* *(* *)* const

Return the visual state used to draw the button. This is useful mainly when implementing your own draw code by either overiding _draw() or connecting to &quot;draw&quot; signal. The visual state of the button is defined by the DRAW_&#42; enum.
