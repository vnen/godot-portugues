h1(#followcamera). FollowCamera

h4(#inherits-camera). *Inherits:* "Camera":class_camera

h4(#category-core). *Category:* Core

h3(#brief-description). Brief Description

h3(#member-functions). Member Functions

* void *"set&#95;orbit":#set_orbit* *(* "Vector2":class_vector2 orbit *)*
* "Vector2":class_vector2 *"get&#95;orbit":#get_orbit* *(* *)* const
* void *"set&#95;orbit&#95;x":#set_orbit_x* *(* "float":class_float x *)*
* void *"set&#95;orbit&#95;y":#set_orbit_y* *(* "float":class_float y *)*
* void *"set&#95;min&#95;orbit&#95;x":#set_min_orbit_x* *(* "float":class_float x *)*
* "float":class_float *"get&#95;min&#95;orbit&#95;x":#get_min_orbit_x* *(* *)* const
* void *"set&#95;max&#95;orbit&#95;x":#set_max_orbit_x* *(* "float":class_float x *)*
* "float":class_float *"get&#95;max&#95;orbit&#95;x":#get_max_orbit_x* *(* *)* const
* void *"set&#95;height":#set_height* *(* "float":class_float height *)*
* "float":class_float *"get&#95;height":#get_height* *(* *)* const
* void *"set&#95;inclination":#set_inclination* *(* "float":class_float inclination *)*
* "float":class_float *"get&#95;inclination":#get_inclination* *(* *)* const
* void *"rotate&#95;orbit":#rotate_orbit* *(* "Vector2":class_vector2 arg0 *)*
* void *"set&#95;distance":#set_distance* *(* "float":class_float distance *)*
* "float":class_float *"get&#95;distance":#get_distance* *(* *)* const
* void *"set&#95;max&#95;distance":#set_max_distance* *(* "float":class_float max&#95;distance *)*
* "float":class_float *"get&#95;max&#95;distance":#get_max_distance* *(* *)* const
* void *"set&#95;min&#95;distance":#set_min_distance* *(* "float":class_float min&#95;distance *)*
* "float":class_float *"get&#95;min&#95;distance":#get_min_distance* *(* *)* const
* void *"set&#95;clip":#set_clip* *(* "bool":class_bool enable *)*
* "bool":class_bool *"has&#95;clip":#has_clip* *(* *)* const
* void *"set&#95;autoturn":#set_autoturn* *(* "bool":class_bool enable *)*
* "bool":class_bool *"has&#95;autoturn":#has_autoturn* *(* *)* const
* void *"set&#95;autoturn&#95;tolerance":#set_autoturn_tolerance* *(* "float":class_float degrees *)*
* "float":class_float *"get&#95;autoturn&#95;tolerance":#get_autoturn_tolerance* *(* *)* const
* void *"set&#95;autoturn&#95;speed":#set_autoturn_speed* *(* "float":class_float speed *)*
* "float":class_float *"get&#95;autoturn&#95;speed":#get_autoturn_speed* *(* *)* const
* void *"set&#95;smoothing":#set_smoothing* *(* "bool":class_bool enable *)*
* "bool":class_bool *"has&#95;smoothing":#has_smoothing* *(* *)* const
* void *"set&#95;rotation&#95;smoothing":#set_rotation_smoothing* *(* "float":class_float amount *)*
* "float":class_float *"get&#95;rotation&#95;smoothing":#get_rotation_smoothing* *(* *)* const
* void *"set&#95;translation&#95;smoothing":#set_translation_smoothing* *(* "float":class_float amount *)*
* "float":class_float *"get&#95;translation&#95;smoothing":#get_translation_smoothing* *(* *)* const
* void *"set&#95;use&#95;lookat&#95;target":#set_use_lookat_target* *(* "bool":class_bool use, "Vector3":class_vector3 lookat=Vector3(0, 0, 0) *)*
* void *"set&#95;up&#95;vector":#set_up_vector* *(* "Vector3":class_vector3 vector *)*
* "Vector3":class_vector3 *"get&#95;up&#95;vector":#get_up_vector* *(* *)* const

h3(#member-function-description). Member Function Description

<ol start="3" style="list-style-type: lower-alpha;">
<li>Juan Linietsky, Ariel Manzur, Distributed under the terms of the "CC By":https://creativecommons.org/licenses/by/3.0/legalcode license.</li>
</ol>
